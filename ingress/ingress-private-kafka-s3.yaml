apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal-flink-kafka-s3-rest-ingress
  namespace: emr-flink
  annotations:
    # AWS Load Balancer Controller annotations for private ALB with IP target mode
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: flink-datagen-private-alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 8081}]'
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: "8081"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
 
    # Load balancer attributes
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=60,
      routing.http2.enabled=true,
      access_logs.s3.enabled=false
 
  labels:
    app: flink-kafka-s3
    type: flink-operator
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flink-kafka-s3-rest
            port:
              number: 8081